#version: "3"
services:

  back:
    image: ${BACK_IMAGE_NAME}:${DEPLOYMENT_TAG}
    restart:  on-failure
    labels:
      - traefik.enable=true
      - traefik.http.routers.back_router.rule=${BACK_ROUTER_RULE}
      - traefik.http.routers.back_router.service=back_service
      - traefik.http.services.back_service.loadbalancer.server.port=80
    environment:
      DATABASE_URL: ${DATABASE_URL}

  mysql:
    image: 'mariadb:10.7.3'
    restart:  on-failure
    environment:
      - MYSQL_ROOT_PASSWORD=${DATABASE_PASSWORD}
      - MYSQL_DATABASE=${DATABASE_NAME}
      - MYSQL_USER=${DATABASE_USERNAME}
      - MYSQL_PASSWORD=${DATABASE_PASSWORD}
    volumes:
      - mysql_db:/var/lib/mysql
  proxy:
    image: traefik:3.0
    container_name: tcm_proxy
    command:
      - --providers.docker
      - --providers.docker.exposedByDefault=false
    labels:
      - traefik.enable=false
    ports:
      - "80:80"
    restart:  on-failure
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      tcm_network:
        aliases:
          - "${API_DOMAIN}"
          - "${BASE_DOMAIN}"


  samltest:
    image: kristophjunge/test-saml-idp
    labels:
      - traefik.enable=true
      - traefik.http.routers.samltest.rule=Host(`samltest.$BASE_DOMAIN`)
      - traefik.http.routers.samltest.service=samltest
      - traefik.http.services.samltest.loadbalancer.server.port=8080
    environment:
      - SIMPLESAMLPHP_SP_ENTITY_ID=http://$BASE_DOMAIN
      - SIMPLESAMLPHP_SP_ASSERTION_CONSUMER_SERVICE=http://$API_DOMAIN/authentication
      - SIMPLESAMLPHP_SP_SINGLE_LOGOUT_SERVICE=http://$API_DOMAIN/api/1.0/login/sso/saml2/logout
    volumes:
      - ./ssoidp/idpUser.php:/var/www/simplesamlphp/config/authsources.php
  node:
    image: "node:16"
    user: "node"
    ports:
      - "24678:24678"
    labels:
      - traefik.enable=true
      - traefik.http.routers.front_router.rule=${FRONT_ROUTER_RULE}
      - traefik.http.routers.front_router.service=front_service
      - traefik.http.services.front_service.loadbalancer.server.port=3000
    working_dir: /home/node/app
    environment:
      - NODE_ENV=development
      # This is used only per the proxy
      - API_URL=http://${API_DOMAIN}/
    volumes:
      - ./apps/front/:/home/node/app
    command:
      - /bin/sh
      - -c
      - |
        yarn install && npm run dev -- -o
     #   npm run dev -- -o
volumes:
  mysql_db:
networks:
  # This could be very usefull to run multiple project on the same machine
  tcm_network:
    name: tcm_network
  default:
    name: tcm_network